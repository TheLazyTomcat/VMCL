Function Vector_ScalarMultiply({%H-}AutoTest: Boolean = False): Integer;
var
  v2s:  TVector2s;
  v3s:  TVector3s;
  v4s:  TVector4s;
  v2d:  TVector2d;
  v3d:  TVector3d;
  v4d:  TVector4d;
  Scls: Single;
  Scld: Double;
begin
WriteLn;
WriteLn(LineText('ScalarMultiply'));
RandomVec(v2s); RandomVec(v3s); RandomVec(v4s);
RandomVec(v2d); RandomVec(v3d); RandomVec(v4d);
Scls := Random(10);
WriteLn;
WriteLn('v2s:      ' + VecToStr(v2s) + Format(' * %f -> ',[Scls]) + VecToStr(ScalarMultiply(v2s,Scls)));
WriteLn; Scls := Random(10);
WriteLn('v3s:      ' + VecToStr(v3s) + Format(' * %f -> ',[Scls]) + VecToStr(ScalarMultiply(v3s,Scls)));
WriteLn; Scls := Random(10);
WriteLn('v4s:      ' + VecToStr(v4s) + Format(' * %f -> ',[Scls]) + VecToStr(ScalarMultiply(v4s,Scls)));
WriteLn; RandomVec(v4s); Scls := Random(10);
WriteLn('v4s(XYZ): ' + VecToStr(v4s) + Format(' * %f -> ',[Scls]) + VecToStr(ScalarMultiplyXYZ(v4s,Scls)));
WriteLn; Scld := Random(10);
WriteLn('v2d:      ' + VecToStr(v2d) + Format(' * %f -> ',[Scld]) + VecToStr(ScalarMultiply(v2d,Scld)));
WriteLn; Scld := Random(10);
WriteLn('v3d:      ' + VecToStr(v3d) + Format(' * %f -> ',[Scld]) + VecToStr(ScalarMultiply(v3d,Scld)));
WriteLn; Scld := Random(10);
WriteLn('v4d:      ' + VecToStr(v4d) + Format(' * %f -> ',[Scld]) + VecToStr(ScalarMultiply(v4d,Scld)));
WriteLn; RandomVec(v4d); Scld := Random(10);
WriteLn('v4d(XYZ): ' + VecToStr(v4d) + Format(' * %f -> ',[Scld]) + VecToStr(ScalarMultiplyXYZ(v4d,Scld)));
Result := 0;
end;
