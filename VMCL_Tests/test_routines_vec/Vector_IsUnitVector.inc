Function Vector_IsUnitVector(AutoTest: Boolean = False): Integer;
var
  v2s:  TVMCLVector2s;
  v3s:  TVMCLVector3s;
  v4s:  TVMCLVector4s;
  v2d:  TVMCLVector2d;
  v3d:  TVMCLVector3d;
  v4d:  TVMCLVector4d;
  LFS:  TVMCLVectorFormat;
begin
LFS := VMCL_DefaultVectorFormat;
LFS.CommonFormat.ValueFormat.DecimalPlaces := 3;
WriteLn;
WriteLn(LineText('IsUnitVector'));
RandomVec(v2s); RandomVec(v3s); RandomVec(v4s);
RandomVec(v2d); RandomVec(v3d); RandomVec(v4d);
WriteLn; Write('v2s:      '+ VecToStr(v2s) + ' ' + BoolToStr(IsUnitVector(v2s),True) + ' -> ');
Normalize(v2s);
WriteLn(VecToStr(v2s,LFS) + ' ' + BoolToStr(IsUnitVector(v2s),True));
WriteLn; Write('v3s:      '+ VecToStr(v3s) + ' ' + BoolToStr(IsUnitVector(v3s),True) + ' -> ');
Normalize(v3s);
WriteLn(VecToStr(v3s,LFS) + ' ' + BoolToStr(IsUnitVector(v3s),True));
WriteLn; Write('v4s:      '+ VecToStr(v4s) + ' ' + BoolToStr(IsUnitVector(v4s),True) + ' -> ');
Normalize(v4s);
WriteLn(VecToStr(v4s,LFS) + ' ' + BoolToStr(IsUnitVector(v4s),True));
RandomVec(v4s);
WriteLn; Write('v4s(XYZ): '+ VecToStr(v4s) + ' ' + BoolToStr(IsUnitVectorXYZ(v4s),True) + ' -> ');
NormalizeXYZ(v4s);
WriteLn(VecToStr(v4s,LFS) + ' ' + BoolToStr(IsUnitVectorXYZ(v4s),True));
WriteLn; Write('v2d:      '+ VecToStr(v2d) + ' ' + BoolToStr(IsUnitVector(v2d),True) + ' -> ');
Normalize(v2d);
WriteLn(VecToStr(v2d,LFS) + ' ' + BoolToStr(IsUnitVector(v2d),True));
WriteLn; Write('v3d:      '+ VecToStr(v3d) + ' ' + BoolToStr(IsUnitVector(v3d),True) + ' -> ');
Normalize(v3d);
WriteLn(VecToStr(v3d,LFS) + ' ' + BoolToStr(IsUnitVector(v3d),True));
WriteLn; Write('v4d:      '+ VecToStr(v4d) + ' ' + BoolToStr(IsUnitVector(v4d),True) + ' -> ');
Normalize(v4d);
WriteLn(VecToStr(v4d,LFS) + ' ' + BoolToStr(IsUnitVector(v4d),True));
RandomVec(v4d);
WriteLn; Write('v4d(XYZ): '+ VecToStr(v4d) + ' ' + BoolToStr(IsUnitVectorXYZ(v4d),True) + ' -> ');
NormalizeXYZ(v4d);
WriteLn(VecToStr(v4d,LFS) + ' ' + BoolToStr(IsUnitVectorXYZ(v4d),True));
Result := 0;
end;